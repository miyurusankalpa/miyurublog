{"componentChunkName":"component---src-templates-blog-post-js","path":"/route53-autoscaling-lambda-ddns/","result":{"data":{"site":{"siteMetadata":{"title":"Miyuru Tech Blog"}},"markdownRemark":{"id":"264d8eaa-57cc-52d0-8325-a843a74fc5ad","excerpt":"A few years back I worked on a project on AWS with some friends and we needed to load balance traffic. To save on the cost of an ALB, I decided on using roundâ€¦","html":"<p>A few years back I worked on a project on AWS with some friends and we needed to load balance traffic. To save on the cost of an ALB, I decided on using round-robin DNS load balancing with Route53 and it worked for a while with long running instances, when we moved to an auto scaling setup things started to break as instances scaled up and down and required manual intervention to update DNS.</p>\n<p>For most of us, the quick solution to this problem is to stick an ALB in front, but I decided to extend my DNS solution even further.</p>\n<p>My solution was to run a Python script in AWS Lambda which updates the DNS in Route53 when an instance state changes in the autoscaling group. (Similar to dynamic DNS services). It is really easy to get the public IPv4 address of the instances from the auto scaling groups. Getting the IPv6 address turned out to be a bit of work, but it was easy to do if there is only one IPv6 address per instance. Also a thing to note is to keep the TTL lower to limit the chances of clients hitting an expired IP address.</p>\n<pre class=\"grvsc-container abyss\" data-language=\"python\" data-index=\"0\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">import</span><span class=\"mtk1\"> boto3</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk15 mtki\">def</span><span class=\"mtk1\"> </span><span class=\"mtk6\">lambda_handler</span><span class=\"mtk1\">(</span><span class=\"mtk19 mtki\">event</span><span class=\"mtk1\">, </span><span class=\"mtk19 mtki\">context</span><span class=\"mtk1\">):</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  ec2 </span><span class=\"mtk7\">=</span><span class=\"mtk1\"> boto3.client(</span><span class=\"mtk11\">&#39;ec2&#39;</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  asg </span><span class=\"mtk7\">=</span><span class=\"mtk1\"> boto3.client(</span><span class=\"mtk11\">&#39;autoscaling&#39;</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  r53 </span><span class=\"mtk7\">=</span><span class=\"mtk1\"> boto3.client(</span><span class=\"mtk11\">&#39;route53&#39;</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  response </span><span class=\"mtk7\">=</span><span class=\"mtk1\"> asg.describe_auto_scaling_groups(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk19 mtki\">AutoScalingGroupNames</span><span class=\"mtk7\">=</span><span class=\"mtk1\">[</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">          </span><span class=\"mtk11\">&#39;asg-name&#39;</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      ],</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk19 mtki\">MaxRecords</span><span class=\"mtk7\">=</span><span class=\"mtk4\">10</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  )</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  insids </span><span class=\"mtk7\">=</span><span class=\"mtk1\"> []</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk7\">for</span><span class=\"mtk1\"> asg </span><span class=\"mtk7\">in</span><span class=\"mtk1\"> response[</span><span class=\"mtk11\">&#39;AutoScalingGroups&#39;</span><span class=\"mtk1\">]:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk7\">for</span><span class=\"mtk1\"> ins </span><span class=\"mtk7\">in</span><span class=\"mtk1\"> asg[</span><span class=\"mtk11\">&#39;Instances&#39;</span><span class=\"mtk1\">]:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      insids.append(ins[</span><span class=\"mtk11\">&#39;InstanceId&#39;</span><span class=\"mtk1\">])</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk15\">print</span><span class=\"mtk1\">(insids)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  response </span><span class=\"mtk7\">=</span><span class=\"mtk1\"> ec2.describe_instances(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk19 mtki\">InstanceIds</span><span class=\"mtk7\">=</span><span class=\"mtk1\">insids</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  )</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  ipv4 </span><span class=\"mtk7\">=</span><span class=\"mtk1\"> []</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  ipv6 </span><span class=\"mtk7\">=</span><span class=\"mtk1\"> []</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk7\">for</span><span class=\"mtk1\"> res </span><span class=\"mtk7\">in</span><span class=\"mtk1\"> response[</span><span class=\"mtk11\">&#39;Reservations&#39;</span><span class=\"mtk1\">]:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk7\">for</span><span class=\"mtk1\"> ins </span><span class=\"mtk7\">in</span><span class=\"mtk1\"> res[</span><span class=\"mtk11\">&#39;Instances&#39;</span><span class=\"mtk1\">]:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      ipv4.append({</span><span class=\"mtk11\">&#39;Value&#39;</span><span class=\"mtk1\">: ins[</span><span class=\"mtk11\">&#39;PublicIpAddress&#39;</span><span class=\"mtk1\">] })</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk7\">for</span><span class=\"mtk1\"> net </span><span class=\"mtk7\">in</span><span class=\"mtk1\"> ins[</span><span class=\"mtk11\">&#39;NetworkInterfaces&#39;</span><span class=\"mtk1\">]:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk7\">for</span><span class=\"mtk1\"> v6 </span><span class=\"mtk7\">in</span><span class=\"mtk1\"> net[</span><span class=\"mtk11\">&#39;Ipv6Addresses&#39;</span><span class=\"mtk1\">]:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">          ipv6.append({</span><span class=\"mtk11\">&#39;Value&#39;</span><span class=\"mtk1\">: v6[</span><span class=\"mtk11\">&#39;Ipv6Address&#39;</span><span class=\"mtk1\">] })</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk15\">print</span><span class=\"mtk1\">(ipv4)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk15\">print</span><span class=\"mtk1\">(ipv6)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  domain </span><span class=\"mtk7\">=</span><span class=\"mtk1\"> </span><span class=\"mtk11\">&quot;example.com&quot;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  response </span><span class=\"mtk7\">=</span><span class=\"mtk1\"> r53.change_resource_record_sets(</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk19 mtki\">HostedZoneId</span><span class=\"mtk7\">=</span><span class=\"mtk11\">&#39;ZZZZZZZZZZZ&#39;</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk19 mtki\">ChangeBatch</span><span class=\"mtk7\">=</span><span class=\"mtk1\">{</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">          </span><span class=\"mtk11\">&#39;Comment&#39;</span><span class=\"mtk1\">: </span><span class=\"mtk11\">&#39;auto dns update for asg&#39;</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">          </span><span class=\"mtk11\">&#39;Changes&#39;</span><span class=\"mtk1\">: [</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">              {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                  </span><span class=\"mtk11\">&#39;Action&#39;</span><span class=\"mtk1\">: </span><span class=\"mtk11\">&#39;UPSERT&#39;</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                  </span><span class=\"mtk11\">&#39;ResourceRecordSet&#39;</span><span class=\"mtk1\">: {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                      </span><span class=\"mtk11\">&#39;Name&#39;</span><span class=\"mtk1\">: domain,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                      </span><span class=\"mtk11\">&#39;Type&#39;</span><span class=\"mtk1\">: </span><span class=\"mtk11\">&#39;A&#39;</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                      </span><span class=\"mtk11\">&#39;TTL&#39;</span><span class=\"mtk1\">: </span><span class=\"mtk4\">300</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                      </span><span class=\"mtk11\">&#39;ResourceRecords&#39;</span><span class=\"mtk1\">: ipv4</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                  }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">              },</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">              {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                  </span><span class=\"mtk11\">&#39;Action&#39;</span><span class=\"mtk1\">: </span><span class=\"mtk11\">&#39;UPSERT&#39;</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                  </span><span class=\"mtk11\">&#39;ResourceRecordSet&#39;</span><span class=\"mtk1\">: {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                      </span><span class=\"mtk11\">&#39;Name&#39;</span><span class=\"mtk1\">: domain,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                      </span><span class=\"mtk11\">&#39;Type&#39;</span><span class=\"mtk1\">: </span><span class=\"mtk11\">&#39;AAAA&#39;</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                      </span><span class=\"mtk11\">&#39;TTL&#39;</span><span class=\"mtk1\">: </span><span class=\"mtk4\">300</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                      </span><span class=\"mtk11\">&#39;ResourceRecords&#39;</span><span class=\"mtk1\">: ipv6</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                  }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">              },</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">          ]</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  )</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk15\">print</span><span class=\"mtk1\">(response)  </span></span></span></code></pre>\n<p>For triggering the Lambda, I used Cloudwatch events to monitor the instanceâ€™s lifecycle actions. Below is the AWS SAM template for the Lambda function. </p>\n<pre class=\"grvsc-container abyss\" data-language=\"yml\" data-index=\"1\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">AWSTemplateFormatVersion</span><span class=\"mtk1\">: </span><span class=\"mtk11\">&#39;2010-09-09&#39;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">Transform</span><span class=\"mtk1\">: </span><span class=\"mtk11\">&#39;AWS::Serverless-2016-10-31&#39;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">Description</span><span class=\"mtk1\">: </span><span class=\"mtk11\">An AWS Serverless Specification template describing your function.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">Resources</span><span class=\"mtk1\">:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk7\">UpdateDNS</span><span class=\"mtk1\">:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk7\">Type</span><span class=\"mtk1\">: </span><span class=\"mtk11\">&#39;AWS::Serverless::Function&#39;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk7\">Properties</span><span class=\"mtk1\">:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk7\">Handler</span><span class=\"mtk1\">: </span><span class=\"mtk11\">index.lambda_handler</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk7\">Runtime</span><span class=\"mtk1\">: </span><span class=\"mtk11\">python3.8</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk7\">CodeUri</span><span class=\"mtk1\">: </span><span class=\"mtk4\">.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk7\">Description</span><span class=\"mtk1\">: </span><span class=\"mtk11\">&#39;&#39;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk7\">MemorySize</span><span class=\"mtk1\">: </span><span class=\"mtk4\">128</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk7\">Timeout</span><span class=\"mtk1\">: </span><span class=\"mtk4\">6</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk7\">Role</span><span class=\"mtk1\">: </span><span class=\"mtk11\">&#39;arn:aws:iam::11111111111:role/service-role/UpdateDNS-role&#39;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk7\">Events</span><span class=\"mtk1\">:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk7\">CloudWatchEvent1</span><span class=\"mtk1\">:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">          </span><span class=\"mtk7\">Type</span><span class=\"mtk1\">: </span><span class=\"mtk11\">CloudWatchEvent</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">          </span><span class=\"mtk7\">Properties</span><span class=\"mtk1\">:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk7\">Pattern</span><span class=\"mtk1\">:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">              </span><span class=\"mtk7\">detail-type</span><span class=\"mtk1\">:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                - </span><span class=\"mtk11\">EC2 Instance-launch Lifecycle Action</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                - </span><span class=\"mtk11\">EC2 Instance-terminate Lifecycle Action</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">              </span><span class=\"mtk7\">source</span><span class=\"mtk1\">:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                - </span><span class=\"mtk11\">aws.autoscaling</span></span></span></code></pre>\n<p>In the end, the solution worked perfectly and it also kept the cost low.</p>\n<style class=\"grvsc-styles\">\n  .grvsc-container {\n    overflow: auto;\n    position: relative;\n    -webkit-overflow-scrolling: touch;\n    padding-top: 1rem;\n    padding-top: var(--grvsc-padding-top, var(--grvsc-padding-v, 1rem));\n    padding-bottom: 1rem;\n    padding-bottom: var(--grvsc-padding-bottom, var(--grvsc-padding-v, 1rem));\n    border-radius: 8px;\n    border-radius: var(--grvsc-border-radius, 8px);\n    font-feature-settings: normal;\n    line-height: 1.4;\n  }\n  \n  .grvsc-code {\n    display: table;\n  }\n  \n  .grvsc-line {\n    display: table-row;\n    box-sizing: border-box;\n    width: 100%;\n    position: relative;\n  }\n  \n  .grvsc-line > * {\n    position: relative;\n  }\n  \n  .grvsc-gutter-pad {\n    display: table-cell;\n    padding-left: 0.75rem;\n    padding-left: calc(var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem)) / 2);\n  }\n  \n  .grvsc-gutter {\n    display: table-cell;\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n  }\n  \n  .grvsc-gutter::before {\n    content: attr(data-content);\n  }\n  \n  .grvsc-source {\n    display: table-cell;\n    padding-left: 1.5rem;\n    padding-left: var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem));\n    padding-right: 1.5rem;\n    padding-right: var(--grvsc-padding-right, var(--grvsc-padding-h, 1.5rem));\n  }\n  \n  .grvsc-source:empty::after {\n    content: ' ';\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n  }\n  \n  .grvsc-gutter + .grvsc-source {\n    padding-left: 0.75rem;\n    padding-left: calc(var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem)) / 2);\n  }\n  \n  /* Line transformer styles */\n  \n  .grvsc-has-line-highlighting > .grvsc-code > .grvsc-line::before {\n    content: ' ';\n    position: absolute;\n    width: 100%;\n  }\n  \n  .grvsc-line-diff-add::before {\n    background-color: var(--grvsc-line-diff-add-background-color, rgba(0, 255, 60, 0.2));\n  }\n  \n  .grvsc-line-diff-del::before {\n    background-color: var(--grvsc-line-diff-del-background-color, rgba(255, 0, 20, 0.2));\n  }\n  \n  .grvsc-line-number {\n    padding: 0 2px;\n    text-align: right;\n    opacity: 0.7;\n  }\n  \n  .abyss { background-color: #000c18; }\n  .abyss .mtki { font-style: italic; }\n  .abyss .mtk7 { color: #225588; }\n  .abyss .mtk1 { color: #6688CC; }\n  .abyss .mtk15 { color: #9966B8; }\n  .abyss .mtk6 { color: #DDBB88; }\n  .abyss .mtk19 { color: #2277FF; }\n  .abyss .mtk11 { color: #22AA44; }\n  .abyss .mtk4 { color: #F280D0; }\n  .abyss .grvsc-line-highlighted::before {\n    background-color: var(--grvsc-line-highlighted-background-color, rgba(255, 255, 255, 0.1));\n    box-shadow: inset var(--grvsc-line-highlighted-border-width, 4px) 0 0 0 var(--grvsc-line-highlighted-border-color, rgba(255, 255, 255, 0.5));\n  }\n</style>","frontmatter":{"title":"Using Route53 to load balance autoscaling groups","date":"July 11, 2023","description":"Using Route53 to create a DDNS service with Lambda for autoscaling groups without a LB"}},"previous":{"fields":{"slug":"/ipv6-hosting-2022/"},"frontmatter":{"title":"IPv6 only hosting list 2022"}},"next":{"fields":{"slug":"/aws-cloudflare-ip-prefixlist/"},"frontmatter":{"title":"Adding Cloudflare IP to AWS Prefix List"}}},"pageContext":{"id":"264d8eaa-57cc-52d0-8325-a843a74fc5ad","previousPostId":"037556f3-7a13-52f9-a003-042aa45419e2","nextPostId":"5dbc0f5a-d3f8-53f2-95f4-c8537d7cd499"}},"staticQueryHashes":["1206640803","2841359383"]}